parameters:
  - name: "stageType"
    displayName: "Pipeline configuration type"
    type: string
    default: ci
    values:
      - pr-e2e
      - ci
      - pre
      - rel

  - name: baseimgBuildType
    displayName: Base Image build type
    type: string
    values:
      - preview
      - release
    default: "release"

  - name: previewContainerImageBuildId
    type: string
    default: "latestFromBranch"

  - name: previewContainerImageArm64BuildId
    type: string
    default: "latestFromBranch"

  - name: blockPublishing
    displayName: "Block publishing to artifact feed"
    type: boolean
    default: false

  - name: forceTridentRebuild
    displayName: "Force trident rebuild rather than downloading previously built."
    type: boolean
    default: false

  - name: includeAzure
    displayName: "Include Azure testing"
    type: boolean
    default: false

stages:
  # Trident Build/Download
  - template: stages/trident_rpms/trident-stage.yml
    parameters:
      stageType: ${{ parameters.stageType }}
      tridentArtifactName: trident-binaries
      codeCoverage: false
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      previewContainerImageArm64BuildId: ${{ parameters.previewContainerImageArm64BuildId }}
      forceTridentRebuild: ${{ parameters.forceTridentRebuild }}

  # Build tools (Go stuff)
  - template: stages/building_tools/building-tools.yml

  # Makefile validation, only for CI and PR-E2E
  - ${{ if or(eq(parameters.stageType, 'ci'), eq(parameters.stageType, 'pr-e2e')) }}:
      - template: stages/validate_makefile/dev-build.yml

  # Build Trident container image
  - template: stages/build_docker_image/trident-container.yml
    parameters:
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}

  # Build Trident installer ISO (host)
  - template: stages/build_image/trident-testimg.yml
    parameters:
      imageName: build/trident-installer-testimage.iso
      outputArtifactName: trident-installer-testimage
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}

  # Build Trident installer ISO (container)
  - template: stages/build_image/trident-testimg.yml
    parameters:
      imageName: build/trident-container-installer-testimage.iso
      outputArtifactName: trident-container-installer-testimage
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      runtimeEnv: "container"

  # Build Trident test image (regular)
  - template: stages/build_image/trident-testimg.yml
    parameters:
      imageName: trident-testimage
      outputArtifactName: trident-testimage
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      mkcosiTemplate: "regular"

  # Build Trident test image (container)
  - template: stages/build_image/trident-testimg.yml
    parameters:
      imageName: trident-container-testimage
      outputArtifactName: trident-container-testimage
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      runtimeEnv: "container"
      mkcosiTemplate: "regular"

  # Build Trident test image (verity)
  - template: stages/build_image/trident-testimg.yml
    parameters:
      imageName: trident-verity-testimage
      outputArtifactName: trident-verity-testimage
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      mkcosiTemplate: "verity"

  - ${{ if or(parameters.forceTridentRebuild, eq(parameters.stageType, 'pr-e2e'), eq(parameters.stageType, 'ci')) }}:
      # Build USB-ISO
      - template: stages/trident_usb_iso/trident-usb-iso.yml
        parameters:
          baseimgBuildType: ${{ parameters.baseimgBuildType }}
          previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
  - ${{ else }}:
      # Download USB-ISO from previous
      - template: stages/download_staged/download-staged.yml
        parameters:
          stageType: ${{ parameters.stageType }}
          artifactName: azl-installer
          packageName: usb-iso

  # dom0 is failing for not known reasons ... comment out for now to unblock, longterm this may
  # be removed from trident pipelines alltogether in favor of being only test-images
  # - ${{ if or(eq(parameters.stageType, 'ci'), eq(parameters.stageType, 'pr-e2e')) }}:
  #   # Build Trident test image (dom0: mshv+ch)
  #   - template: stages/build_image/trident-mshvch-dom0-testimg.yml

  # Test Servicing on VMs
  - template: stages/testing_servicing/vm-testing.yml
    parameters:
      baseimgBuildType: ${{ parameters.baseimgBuildType }}
      previewContainerImageBuildId: ${{ parameters.previewContainerImageBuildId }}
      includeAzure: ${{ parameters.includeAzure }}

  # TESTING stages for PRERELEASE
  - ${{ if eq(parameters.stageType, 'pre') }}:
      # Functional Testing
      - template: stages/testing_functional/functional-testing.yml

      # VM Testing (host, daily)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "daily"
          runtimeEnv: "host"

      # BM Testing (host, daily)
      - template: stages/testing_baremetal/baremetal-testing.yml
        parameters:
          buildPurpose: "daily"
          runtimeEnv: "host"

      # VM Testing (container, daily)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "daily"
          runtimeEnv: "container"

  # TESTING stages for CI
  - ${{ if eq(parameters.stageType, 'ci') }}:
      # Functional Testing
      - template: stages/testing_functional/functional-testing.yml

      # VM Testing (host, post_merge)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "post_merge"
          runtimeEnv: "host"

      # VM Testing (container, post_merge)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "post_merge"
          runtimeEnv: "container"

  # TESTING stages for PR-E2E
  - ${{ if eq(parameters.stageType, 'pr-e2e') }}:
      # Functional Testing (short version)
      - template: stages/testing_functional/functional-testing.yml
        parameters:
          buildPurpose: "validation"

      # VM Testing (host, pullrequest)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "pullrequest"
          runtimeEnv: "host"

      # VM Testing (container, pullrequest)
      - template: stages/testing_vm/netlaunch-testing.yml
        parameters:
          buildPurpose: "pullrequest"
          runtimeEnv: "container"

  # PUBLISHING
  #
  # Only enabled for PRERELEASE and CI unless blockPublishing is set to true.
  - ${{ if eq(parameters.blockPublishing, false) }}:
      - ${{ if or(eq(parameters.stageType, 'pre'), eq(parameters.stageType, 'ci')) }}:
          - template: stages/publishing/publish.yml
            parameters:
              stageType: ${{ parameters.stageType }}
