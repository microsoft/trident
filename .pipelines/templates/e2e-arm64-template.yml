# e2e-ARM64-template will run ARM64 trident tests for each of our scenarios.
# This includes unit tests, integration tests, and end-to-end tests.
#
# Prior to invoking this template, an artifact must be created that
# contains information about the base image being used.  This artifact
# should be created by this template:
#
#   .pipelines/templates/stages/base_image_config/create-base-image-config-artifact.yml
#
# The stage that creates the artifact should be passed into e2e-arm64-template
# as baseImageArtifactStage.  This will ensure that e2e-template waits for
# the base image artifact to be created.
#
parameters:
  - name: "stageType"
    displayName: "Pipeline configuration type"
    type: string
    default: ci
    values:
      - pr-e2e
      - pr-e2e-azure
      - ci
      - pre
      - rel
      - full-validation

  - name: blockPublishing
    displayName: "Block publishing to artifact feed"
    type: boolean
    default: false

  - name: forceTridentRebuild
    displayName: "Force trident rebuild rather than downloading previously built."
    type: boolean
    default: false

  - name: includeAzure
    displayName: "Include Azure testing"
    type: boolean
    default: false

  - name: micBuildType
    displayName: MIC Build Type
    type: string
    values:
      - dev
      - preview
      - release
    default: release

  - name: micVersion
    displayName: MIC Version
    type: string
    default: "*.*.*"

  - name: numberOfUpdateIterations
    displayName: Number of times each worker invokes A/B Update
    type: number
    default: 3

  - name: osModifierBranch
    type: string
    default: "submodule"

  - name: baremetalTestsEnabled
    type: boolean
    default: true

  - name: forceFunctionalTestImageRebuild
    type: boolean
    default: false

  - name: baseImageArtifactStage
    type: string
    
stages:
  # Trident Build/Download
  - template: stages/trident_rpms/trident-stage.yml
    parameters:
      stageType: ${{ parameters.stageType }}
      tridentArtifactName: trident-binaries
      codeCoverage: false
      forceTridentRebuild: ${{ parameters.forceTridentRebuild }}
      osModifierBranch: ${{ parameters.osModifierBranch }}
      dependsOnStage: ${{ parameters.baseImageArtifactStage }}
      targetArchitecture: arm64
