steps:
  - script: |
      set -eux
      TRIDENT_VERSION=$(python3 ./scripts/get-version.py "$(Build.BuildNumber)" --commit)
      echo "##vso[task.setvariable variable=trident_version]$TRIDENT_VERSION"
    displayName: "Setting trident version"

  - task: onebranch.pipeline.version@1
    displayName: "Set build number"
    inputs:
      system: "Custom"
      customVersion: $(trident_version)

  - script: sudo tdnf install -y protobuf protobuf-c openssl-devel clang-devel rust
    displayName: Install native dependencies

  - script: |
      export TRIDENT_VERSION=$(trident_version)
      cargo build --locked --release 2>&1
      test "$(./target/release/trident --version)" = "trident $TRIDENT_VERSION"
      exit $?
    displayName: Build Release

  - task: CopyFiles@2
    inputs:
      sourceFolder: "./target/release"
      targetFolder: "$(ob_outputDirectory)"
      contents: "*"
    displayName: Copy files to output

  - task: CopyFiles@2
    inputs:
      sourceFolder: "./artifacts"
      targetFolder: "/usr/src/mariner/SOURCES"
      contents: "*"
    displayName: Copy EMU to SOURCES

  - script: |
      set -eux
      full_version=$(trident_version)

      # Separate into version and prerelease identifier
      # for the RPM build.
      version=$(echo $full_version | cut -d'-' -f1)
      prerelease=$(echo $full_version | cut -d'-' -f2-)

      rpmbuild -bb --build-in-place trident.spec \
        --define="trident_version $full_version" \
        --define="rpm_ver $version" \
        --define="rpm_rel $prerelease"
    displayName: Build RPM

  - task: CopyFiles@2
    inputs:
      sourceFolder: "/usr/src/mariner/RPMS/x86_64"
      targetFolder: "$(ob_outputDirectory)"
    displayName: Copy RPM file to output

  - template: common/setup-registries-template.yaml@platform-pipelines

  - script: |
      set -eu
      
      mkdir -p bin
      cp -r /usr/src/mariner/RPMS bin/
      DOCKER_BUILDKIT=1 make docker-runtime-build

      # ado redacts random strings (like `ecfafoncpriv`). To still be able
      # to show some useful logs, we replace some parts so that ado does not
      # exclude them.
      #
      echo "container_registry_rw_user    :" $(container_registry_rw_user)
      echo "container_registry_pub        :" $(echo $(container_registry_pub) | sed 's/afo/___/g')
      
      docker login "$(container_registry_pub)" -u "$(container_registry_rw_user)" -p "$(container_registry_rw_pswd)"
      TAG="$(container_registry_pub)"/trident:$(Build.BuildNumber)
      docker tag trident/trident:latest $TAG
      docker push $TAG
    displayName: Build and publish Docker image
