parameters:
  - name: dependsOnStage
    type: string
    default: ''

  - name: osModifierBranch
    type: string
    default: "main"

stages:
  - stage: MakefileValidation
    displayName: Validate Makefile targets
    ${{ if ne(parameters.dependsOnStage, '') }}:
      dependsOn: ${{ parameters.dependsOnStage }}

    jobs:
      - job: Make
        displayName: make
        timeoutInMinutes: 30
        pool:
          type: linux
          name: trident-ubuntu-1es-pool-eastus2
          hostArchitecture: amd64

        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build

        steps:
          - template: ../common_tasks/avoid-pypi-usage.yml
          - template: ../common_tasks/download-osmodifier.yml
            parameters:
              osmodifierBuildType: main
              osModifierBranch: ${{ parameters.osModifierBranch }}

          - script: |
              set -eux
              sudo apt install -y protobuf-compiler clang bc
            displayName: Install native dependencies
            retryCountOnTaskFailure: 3

          - template: ../common_tasks/rustup.yml
          - template: ../common_tasks/cargo-auth.yml

          - bash: |
              set -eux
              # Disabled `generate-mermaid-diagrams` due to #9055
              make validate-configs
              make bin/trident-rpms.tar.gz
              make docker-build
            displayName: Invoke make
            env:
              OVERRIDE_RUST_FEED: false

          - script: |
              set -eux

              make check-sh
            displayName: "Validate sh files in repo"
            workingDirectory: $(Build.SourcesDirectory)
            env:
              OVERRIDE_RUST_FEED: false

          - script: |
              set -eux

              make check-pipelines BRANCH=$(Build.SourceBranch)
            displayName: "Validating pipeline templates work"
            workingDirectory: $(Build.SourcesDirectory)
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
              OVERRIDE_RUST_FEED: false

          - script: cargo install --locked cargo-deny@0.16.2
            displayName: Install cargo-deny

          - script: cargo deny --all-features --workspace check licenses
            displayName: Check licenses
