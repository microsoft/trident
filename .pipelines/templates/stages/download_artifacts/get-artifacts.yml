parameters:
  - name: definition
    type: number
    default: 2195
    displayName: Pipeline definition ID

  - name: branch
    type: string
    default: main
    displayName: Branch to download Artifacts from

stages:
  - stage: DownloadTestingElements
    displayName: Download elements for testing

    jobs:
      - job: InstallerTestimage
        displayName: Download trident-installer-testimage
        timeoutInMinutes: 10
        pool:
          type: linux
      
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          ob_artifactBaseName: "trident-installer-testimage"

        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download installer-iso/installer.iso"
            inputs:
              buildType: specific
              project: ECF
              definition: ${{ parameters.definition }}
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/${{ parameters.branch }}"
              artifactName: "trident-installer-testimage"
              targetPath: $(ob_outputDirectory)

      - job: TridentTestimage
        displayName: "Download trident-testimage"
        timeoutInMinutes: 10
        pool:
          type: linux
      
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          ob_artifactBaseName: "trident-testimage"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: specific
              project: ECF
              definition: ${{ parameters.definition }}
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/${{ parameters.branch }}"
              artifactName: "trident-testimage"
              targetPath: $(ob_outputDirectory)

      - job: TridentVeritTestimage
        displayName: "Download trident-verity-testimage"
        timeoutInMinutes: 10
        pool:
          type: linux
      
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          ob_artifactBaseName: "trident-verity-testimage"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: specific
              project: ECF
              definition: ${{ parameters.definition }}
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/${{ parameters.branch }}"
              artifactName: "trident-verity-testimage"
              targetPath: $(ob_outputDirectory)

      - job: ContainerhostTestimage
        displayName: "Download containerhost-testimage"
        timeoutInMinutes: 10
        pool:
          type: linux
      
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          ob_artifactBaseName: "containerhost-testimage"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: specific
              project: ECF
              definition: ${{ parameters.definition }}
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/${{ parameters.branch }}"
              artifactName: "containerhost-testimage"
              targetPath: $(ob_outputDirectory)

      - job: Gotools
        displayName: "Download go-tools"
        timeoutInMinutes: 10
        pool:
          type: linux
      
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          ob_artifactBaseName: "go-tools"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: specific
              project: ECF
              definition: ${{ parameters.definition }}
              buildVersionToDownload: "latestFromBranch"
              branchName: "refs/heads/${{ parameters.branch }}"
              artifactName: "go-tools"
              patterns: "netlaunch"
              targetPath: $(ob_outputDirectory)
