parameters:
  - name: "imageName"
    type: string

  - name: "registry"
    displayName: "Container registry to push to"
    type: string
    default: "maritimuspublic"

# stages:
#   - stage: PushTridentTestImg_${{ replace(parameters.imageName, '-', '_') }}
#     displayName: Push ${{ parameters.imageName }} to ACR
#     dependsOn:
#       - TridentTestImg_${{ replace(parameters.imageName, '-', '_') }}

#     variables:
#       ob_outputDirectory: $(Build.SourcesDirectory)/build
#       ob_artifactBaseName: ${{ parameters.imageName }}

#     jobs:
#       - job: LoginToAcr
#         displayName: Login
#         pool:
#           type: linux

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: maritimus-staging-eastus-cr-service-connection
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -eux
        acr_token=$(az acr login -n ${{ parameters.registry }} --expose-token --output tsv --query accessToken)
        echo "##vso[task.setvariable variable=acr_token;issecret=true]$acr_token"
      displayName: "Az ACR login and get token"

  - bash: |
      set -eux
      echo "$(acr_token)" | docker login ${{ parameters.registry }}.azurecr.io --username "00000000-0000-0000-0000-000000000000" --password-stdin
    displayName: "ACR docker login"

  - bash: |
      set -eux
      sudo snap install oras --classic
    displayName: "Install ORAS"

  - bash: |
      set -eux
      oras push ${{ parameters.registry }}.azurecr.io/regular:v1 ${{ variables.ob_outputDirectory }}/${{ variables.ob_artifactBaseName }}
    displayName: "Use ORAS to push to registry"
