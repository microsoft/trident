parameters:
  - name: testingRun
    displayName: "Download prebuilt test artifacts"
    type: boolean
    default: false

  - name: baseimgBuildType
    displayName: Base Image build type
    type: string
    values:
      - dev
      - preview
      - release
    default: "release"

  - name: baseImagePipelineBuildId
    displayName: "Build Id of the pipeline run, default will select latest successful run from pipeline 2116 ([AMD64-6-OneBranch]-Prod-BuildImages) with tag 3.0-preview"
    type: string
    default: "latestFromBranch"

  - name: baseimgAzlVersion
    displayName: Base Image AZL version
    type: string
    default: "3.0"

  - name: updateIterationCount
    displayName: "Number of updates to test"
    type: number
    default: 3

  - name: rollbackTesting
    displayName: "Run rollback test"
    type: boolean
    default: true

  - name: workers
    displayName: "Number of workers to use"
    type: number
    default: 1

  - name: updateCheckTimeoutInMinutes
    displayName: "Timeout for checking runtime OS deployment in minutes"
    type: number
    default: 30

  - name: verboseLogging
    displayName: "Enable verbose logging"
    type: boolean
    default: false

  - name: includeQemu
    displayName: "Include qemu testing"
    type: boolean
    default: false

  - name: includeAzure
    displayName: "Include Azure testing"
    type: boolean
    default: false

  - name: includeUKI
    displayName: "Include UKI testing"
    type: boolean
    default: false

  - name: micBuildType
    displayName: MIC Build Type
    type: string
    values:
      - dev
      - preview
      - release
    default: release

  - name: micVersion
    displayName: MIC Version
    type: string
    default: "*.*.*"

stages:
  - ${{ if eq(parameters.testingRun, false) }}:
      - stage: PrepareSSHKeys
        displayName: Prepare SSH Keys
        jobs:
          - template: generate-ssh-keys.yml

      - ${{ if eq(parameters.includeQemu, true) }}:
        - stage: BuildImagesQemu
          displayName: Build Base and Update Images for QEMU
          dependsOn:
            - PrepareSSHKeys
            - GetTridentBinaries_rpms

          jobs:
            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "qemu-base"
                makeTarget: "build/trident-vm-grub-verity-testimage.qcow2"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "qemu-update-a"
                makeTarget: "build/trident-vm-grub-verity-testimage.cosi"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "qemu-update-b"
                makeTarget: "build/trident-vm-grub-verity-testimage.cosi"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

      - ${{ if eq(parameters.includeAzure, true) }}:
          - stage: BuildImagesAzure
            displayName: Build Base and Update Images for Azure
            dependsOn:
              - PrepareSSHKeys
              - GetTridentBinaries_rpms

            jobs:
              - template: build-image.yml
                parameters:
                  baseimgBuildType: ${{ parameters.baseimgBuildType }}
                  label: "azure-base"
                  makeTarget: "build/trident-vm-grub-verity-azure-testimage.vhd"
                  baseimgType: core_selinux
                  baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                  baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                  micBuildType: ${{ parameters.micBuildType }}
                  micVersion: ${{ parameters.micVersion }}

              - template: build-image.yml
                parameters:
                  baseimgBuildType: ${{ parameters.baseimgBuildType }}
                  label: "azure-update-a"
                  makeTarget: "build/trident-vm-grub-verity-azure-testimage.cosi"
                  baseimgType: core_selinux
                  baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                  baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                  micBuildType: ${{ parameters.micBuildType }}
                  micVersion: ${{ parameters.micVersion }}

              - template: build-image.yml
                parameters:
                  baseimgBuildType: ${{ parameters.baseimgBuildType }}
                  label: "azure-update-b"
                  makeTarget: "build/trident-vm-grub-verity-azure-testimage.cosi"
                  baseimgType: core_selinux
                  baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                  baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                  micBuildType: ${{ parameters.micBuildType }}
                  micVersion: ${{ parameters.micVersion }}

      - ${{ if eq(parameters.includeUKI, true) }}:
        - stage: BuildImagesUKI
          displayName: Build Base and Update Images for UKI
          dependsOn:
            - PrepareSSHKeys
            - GetTridentBinaries_rpms

          jobs:
            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "uki-base"
                makeTarget: "build/trident-vm-usr-verity-testimage.qcow2"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "uki-update-a"
                makeTarget: "build/trident-vm-usr-verity-testimage.cosi"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

            - template: build-image.yml
              parameters:
                baseimgBuildType: ${{ parameters.baseimgBuildType }}
                label: "uki-update-b"
                makeTarget: "build/trident-vm-usr-verity-testimage.cosi"
                baseimgType: qemu_guest
                baseimgAzlVersion: ${{ parameters.baseimgAzlVersion }}
                baseImagePipelineBuildId: ${{ parameters.baseImagePipelineBuildId }}
                micBuildType: ${{ parameters.micBuildType }}
                micVersion: ${{ parameters.micVersion }}
                useStagedSshKeys: true

  - stage: ServicingTesting
    displayName: Servicing Testing
    dependsOn:
      - ${{ if eq(parameters.testingRun, true) }}:
          - DownloadTestingElements
      - ${{ else }}:
          - BuildingTools
          - ${{ if eq(parameters.includeQemu, true) }}:
              - BuildImagesQemu
          - ${{ if eq(parameters.includeAzure, true) }}:
              - BuildImagesAzure
          - ${{ if eq(parameters.includeUKI, true) }}:
              - BuildImagesUKI

    variables:
      SSH_PRIVATE_KEY_PATH: "$HOME/.ssh/id_rsa"
      SSH_PUBLIC_KEY_PATH: "$(SSH_PRIVATE_KEY_PATH).pub"
      IMAGE_DEFINITION: "trident-vm-grub-verity-testimage-$(System.DefinitionId)"
      SUBSCRIPTION: 04cdc145-a4f9-42d4-9868-c46d23d0c63f # CoreOS_Mariner_BMP_Staging
      STORAGE_ACCOUNT: "azlinuxbmpstagingeastus2"
      RESOURCE_GROUP: "azlinux_bmp_staging_eastus2"
      SUBNET_ID: /subscriptions/04cdc145-a4f9-42d4-9868-c46d23d0c63f/resourceGroups/trident-vm_servicing-azure-vnet/providers/Microsoft.Network/virtualNetworks/poolpeeringvnet/subnets/default

    jobs:
      - ${{ if eq(parameters.includeQemu, true) }}:
          - template: testing-template.yml
            parameters:
              updateIterationCount: ${{ parameters.updateIterationCount }}
              rollbackTesting: ${{ parameters.rollbackTesting }}
              workers: ${{ parameters.workers }}
              updateCheckTimeoutInMinutes: ${{ parameters.updateCheckTimeoutInMinutes }}
              verboseLogging: ${{ parameters.verboseLogging }}
              platform: qemu
              flavor: qemu

      - ${{ if eq(parameters.includeAzure, true) }}:
          - template: testing-template.yml
            parameters:
              updateIterationCount: ${{ parameters.updateIterationCount }}
              rollbackTesting: ${{ parameters.rollbackTesting }}
              workers: ${{ parameters.workers }}
              updateCheckTimeoutInMinutes: ${{ parameters.updateCheckTimeoutInMinutes }}
              verboseLogging: ${{ parameters.verboseLogging }}
              platform: azure
              flavor: azure
              pool: trident-ubuntu-official-1es-pool-eastus2

      - ${{ if eq(parameters.includeUKI, true) }}:
          - template: testing-template.yml
            parameters:
              updateIterationCount: ${{ parameters.updateIterationCount }}
              rollbackTesting: ${{ parameters.rollbackTesting }}
              workers: ${{ parameters.workers }}
              updateCheckTimeoutInMinutes: ${{ parameters.updateCheckTimeoutInMinutes }}
              verboseLogging: ${{ parameters.verboseLogging }}
              platform: qemu
              flavor: uki
