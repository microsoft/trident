parameters:
  - name: testRunName
    type: string
  - name: junitTestFile
    type: string
  - name: displayNameSpecifier
    type: string
  - name: artifactName
    type: string

steps:
  - task: PublishTestResults@2
    condition: and(succeededOrFailed(), ne(variables['skipJunitHandling'], 'true'))
    inputs:
      testResultsFormat: JUnit
      testResultsFiles: ${{ parameters.junitTestFile }}
      testRunTitle: ${{ parameters.testRunName }}
    displayName: "Publish junit test results for ${{ parameters.displayNameSpecifier }}"

  - bash: |
     rm -rf /tmp/ONEBRANCH_ARTIFACT
     mkdir -p /tmp/ONEBRANCH_ARTIFACT
     cp ${{ parameters.junitTestFile }} /tmp/ONEBRANCH_ARTIFACT/
    displayName: "Prepare JUnit XML for ${{ parameters.displayNameSpecifier }}"
    condition: and(succeededOrFailed(), ne(variables['skipJunitHandling'], 'true'))

  - task: PublishBuildArtifacts@1
    displayName: "Publish JUnit XML for ${{ parameters.displayNameSpecifier }}"
    condition: and(succeededOrFailed(), ne(variables['skipJunitHandling'], 'true'))
    inputs:
      pathToPublish: /tmp/ONEBRANCH_ARTIFACT/
      artifactName: ${{ parameters.artifactName }}
