steps:
  - bash: |
      set -eux

      # Print OS version:
      cat /etc/os-release

      echo "Context:"
      pwd
      ls -la
    displayName: "Print pipeline context"

  - bash: |
      set -eux

      for codename in focal jammy; do
        if grep UBUNTU_CODENAME=$codename /etc/os-release -q; then
          sudo add-apt-repository -y ppa:stefanberger/swtpm-$codename
          sudo apt-get -y update

          # This prevents conflict on later install.
          # It fails silently if the packages aren't installed.
          sudo apt-get purge -y swtpm swtpm-tools libtpms0

          break
        fi
      done
    displayName: "Install SWTPM PPA"
    retryCountOnTaskFailure: 3

  - bash: |
      set -eux

      sudo NEEDRESTART_MODE=a apt-get install -y \
          swtpm \
          swtpm-tools \
          bridge-utils \
          virt-manager \
          qemu-efi \
          qemu-kvm \
          libtpms0 \
          libvirt-daemon-system \
          libvirt-clients \
          python3-libvirt \
          ovmf \
          openssl \
          python3-netifaces \
          python3-docker \
          python3-bcrypt \
          python3-jinja2 \
          zstd

      sudo pip3 install virt-firmware
    displayName: Install virt-deploy dependencies
    retryCountOnTaskFailure: 3

  - bash: |
      set -eux

      sudo usermod -a -G libvirt $USER

      mkdir -p ~/.config/libvirt
      cat << EOF > ~/.config/libvirt/libvirt.conf
      uri_default = "qemu:///system"
      EOF

      sudo mkdir -p /etc/systemd/system/libvirtd.socket.d
      echo "[Socket]
      SocketMode=0666" | sudo tee /etc/systemd/system/libvirtd.socket.d/mode.conf > /dev/null

      sudo systemctl daemon-reload

      sudo systemctl stop libvirtd.service
      sudo systemctl restart libvirtd.socket
      sudo systemctl start libvirtd.service

    displayName: "Configure libvirt access"

  - bash: |
      set -eux

      echo "=== Initial iptables rules ==="
      sudo iptables -L

      echo "=== Ensure the default libvirt network is active ==="
      sudo virsh net-start default || true
      sudo virsh net-autostart default

      echo "=== Network status ==="
      sudo virsh net-list --all

      echo "=== Bridge interface details ==="
      ip addr show virbr0
      ip route show dev virbr0

      echo "=== NAT rules ==="
      sudo iptables -t nat -L POSTROUTING -v
      sudo iptables -t nat -L LIBVIRT_PRT -v

      echo "=== IP forwarding status ==="
      cat /proc/sys/net/ipv4/ip_forward

      echo "=== Enable IP forwarding if disabled ==="
      echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward

      echo "=== Host connectivity test ==="
      ping -c 3 8.8.8.8 || true
      nslookup maritimuspublic.azurecr.io || echo "DNS resolution failed"

      echo "=== Docker vs libvirt conflict check ==="
      sudo iptables -L DOCKER-USER -v

      echo "=== Add rule to allow libvirt traffic through Docker ==="
      sudo iptables -I DOCKER-USER -i virbr0 -j ACCEPT 2>/dev/null || echo "Rule already exists or not needed"
      sudo iptables -I DOCKER-USER -o virbr0 -j ACCEPT 2>/dev/null || echo "Rule already exists or not needed"
    displayName: "Configure VM networking for internet access"
