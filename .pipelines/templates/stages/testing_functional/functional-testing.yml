parameters:
  - name: testingRun
    displayName: "Download prebuilt test artifacts"
    type: boolean
    default: false

  - name: buildPurpose
    type: string
    default: "post_merge"
    values:
      - post_merge
      - validation

stages:
  - stage: FunctionalTesting
    displayName: Functional Testing
    dependsOn:
      - ${{ if eq(parameters.testingRun, true) }}:
          - DownloadTestingElements
      - ${{ else }}:
          - BuildingTools
          - TridentTestImg_trident_installer_testimage
          - TridentTestImg_trident_testimage
          - TridentTestImg_trident_verity_testimage

    jobs:
      - job: FunctionalTests
        displayName: Functional Tests
        timeoutInMinutes: 50
        pool:
          type: linux
          name: trident-ubuntu-1es-pool-eastus2
          hostArchitecture: amd64

        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/build
          argusToolkitSourceDirectory: $(Build.SourcesDirectory)/argus-toolkit

        steps:
          - checkout: argus-toolkit
            fetchDepth: 1
          - checkout: platform-tests
            fetchDepth: 1

          - template: ../common_tasks/cargo-auth.yml
            parameters:
              action: override

          # Download all test images for host
          - template: ../testing_common/download-test-images.yml

          - template: ../testing_vm/netlaunch-prep.yml

          - bash: |
              set -eux

              sudo apt install -y protobuf-compiler clang bc
              sudo apt remove python3-openssl
              pip install pytest assertpy paramiko pyopenssl
            displayName: Install dependencies
            retryCountOnTaskFailure: 3

          - bash: |
              set -eux

              ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -q -N ""
            displayName: Set up SSH Keys
            retryCountOnTaskFailure: 3

          - template: ../common_tasks/rustup.yml

          - bash: |
              set -eux

              # Copy files from platform-tests to functional_tests
              cp platform-tests/tools/marinerhci_test_tools/node_interface.py functional_tests/
              cp platform-tests/tools/marinerhci_test_tools/ssh_node.py functional_tests/

              # Run the core of the functional tests, which means only
              # rebuilding the test binaries and invoking pytest. The regular
              # target is meant for local use and does extra setup not required
              # here.
              sg libvirt "make functional-test-core INSTALLER_ISO_PATH=./artifacts/iso/trident-installer-testimage.iso ARGUS_TOOLKIT_PATH=argus-toolkit"
            displayName: Execute Functional Tests

          - template: ../common_tasks/coverage.yml
            parameters:
              codeCoverageBaseline: 78 # Unit + functional tests
              executeUnitTests: true
              installNativeDependencies: false
              rustup: false

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "$(Build.SourcesDirectory)/target/trident_functional_tests.xml"

          - bash: |
              set -eux

              sg libvirt "make patch-functional-test INSTALLER_ISO_PATH=$(System.ArtifactsDirectory)/trident-installer-testimg.iso ARGUS_TOOLKIT_PATH=argus-toolkit"
            condition: and(succeeded(), eq('${{ parameters.buildPurpose }}', 'post_merge'))
            displayName: Rerun Functional Tests
