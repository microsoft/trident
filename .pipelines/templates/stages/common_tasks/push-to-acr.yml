parameters:
  - name: "imageName"
    displayName: "Test image name, doubling as repository name"
    type: string
    values:
      - trident-testimage
      - trident-container-testimage

  - name: "config"
    displayName: "Trident configuration"
    type: string

  - name: "deploymentEnvironment"
    type: string
    values:
      - virtualMachine
      - bareMetal

steps:
  - bash: |
      set -eux

      if [ ${{ parameters.config }} != 'extensions' ]; then
        echo "Skipping step. Configuration is '${{ parameters.config }}'."
        exit 0
      fi

      ./bin/storm-trident script build-extension-images --build-sysexts --build-confexts --num-clones 2

    displayName: "Build test sysext and confext images"
    workingDirectory: $(Build.SourcesDirectory)
    retryCountOnTaskFailure: 3

  - bash: |
      set -eux
      if [ ${{ parameters.config }} != 'misc' ] && [ ${{ parameters.config }} != 'extensions' ]; then
        echo "Skipping step. Configuration is '${{ parameters.config }}'."
        exit 0
      fi

      VERSION="1.2.2"
      curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
      mkdir -p oras-install/
      tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
      sudo mv oras-install/oras /usr/local/bin/
      rm -rf oras_${VERSION}_*.tar.gz oras-install/
    displayName: "Install ORAS"
    retryCountOnTaskFailure: 3

  - task: AzureCLI@2
    inputs:
      azureSubscription: trident-dev-acr-write-umi-ECF
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -eux

        if [ ${{ parameters.config }} == 'misc' ]; then
          ./bin/storm-trident script acr-push \
            --config ${{ parameters.config }} \
            --deployment-environment ${{ parameters.deploymentEnvironment }} \
            --acr-name $(ACR_NAME) \
            --repo-name ${{ parameters.imageName }} \
            --build-id $(Build.BuildId) \
            --file-paths $(Build.SourcesDirectory)/artifacts/test-image/regular.cosi \
            --file-paths $(Build.SourcesDirectory)/artifacts/test-image/regular_v2.cosi \
            --file-paths $(Build.SourcesDirectory)/artifacts/test-image/regular_v3.cosi \
            --file-paths $(Build.SourcesDirectory)/artifacts/test-image/regular_v4.cosi

        elif [ ${{ parameters.config }} == 'extensions' ]; then
          ./bin/storm-trident script acr-push \
            --config ${{ parameters.config }} \
            --deployment-environment ${{ parameters.deploymentEnvironment }} \
            --acr-name $(ACR_NAME) \
            --repo-name sysext \
            --build-id $(Build.BuildId) \
            --file-paths $(Build.SourcesDirectory)/test-sysext-1.raw \
            --file-paths $(Build.SourcesDirectory)/test-sysext-2.raw
          ./bin/storm-trident helper acr-push \
            --config ${{ parameters.config }} \
            --deployment-environment ${{ parameters.deploymentEnvironment }} \
            --acr-name $(ACR_NAME) \
            --repo-name confext \
            --build-id $(Build.BuildId) \
            --file-paths $(Build.SourcesDirectory)/test-confext-1.raw \
            --file-paths $(Build.SourcesDirectory)/test-confext-2.raw

        else
          echo "Skipping step. Configuration is '${{ parameters.config }}'."
          exit 0
        fi

    displayName: "Push to ACR"
    retryCountOnTaskFailure: 3
