parameters:
  - name: "imageName"
    displayName: "Test image name, doubling as repository name"
    type: string
    values:
      - trident-testimage
      - trident-container-testimage

  - name: "registry"
    displayName: "Container registry to push to"
    type: string
    default: "maritimuspublic"

  - name: "config"
    displayName: "Trident configuration"
    type: string

  - name: "deploymentEnvironment"
    type: string
    values:
      - virtualMachine
      - bareMetal

steps:
  - bash: |
      set -eux

      if [ ${{ parameters.config }} != 'misc' ]; then
        echo "Skipping step. Configuration is '${{ parameters.config }}'."
        exit 0
      fi

      VERSION="1.2.2"
      curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
      mkdir -p oras-install/
      tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
      sudo mv oras-install/oras /usr/local/bin/
      rm -rf oras_${VERSION}_*.tar.gz oras-install/
    displayName: "Install ORAS"
    retryCountOnTaskFailure: 3

  - task: AzureCLI@2
    inputs:
      azureSubscription: maritimus-staging-eastus-cr-service-connection
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -eux

        if [ ${{ parameters.config }} != 'misc' ]; then
          echo "Skipping step. Configuration is '${{ parameters.config }}'."
          exit 0
        fi

        # Login to ACR
        az acr login -n ${{ parameters.registry }}

        repository_name=${{ parameters.imageName }}
        build_id="$(Build.BuildId)"

        cd $(Build.SourcesDirectory)/artifacts/test-image

        tag_base="v${build_id}.${{ parameters.config }}.${{ parameters.deploymentEnvironment }}"
        for version in {1..4}; do
          if [[ $version == 1 ]]; then
            filename="regular.cosi"
          else
            filename="regular_v${version}.cosi"
          fi

          tag="$tag_base.${version}"

          if [[ -f "$filename" ]]; then
            echo "Pushing $filename with tag $tag to ${{ parameters.registry }}.azurecr.io"
            oras push ${{ parameters.registry }}.azurecr.io/$repository_name:$tag "$filename"
            sleep 3
            echo "Verifying $filename was pushed successfully..."
            az acr repository show --name ${{ parameters.registry }} --image ${repository_name}:${tag}
          else
            echo "File $filename not found"
          fi
        done

        # Set variable for tag base of pushed images
        echo "##vso[task.setvariable variable=TAG_BASE]$tag_base"
    displayName: "Push to ACR"
    retryCountOnTaskFailure: 3
