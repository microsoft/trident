parameters:
  - name: "imageName"
    displayName: "Test image name, doubling as repository name"
    type: string
    values:
      - trident-testimage
      - trident-container-testimage

  - name: "versionNumber"
    displayName: "Test image version number"
    type: string

  - name: "registry"
    displayName: "Container registry to push to"
    type: string
    default: "maritimuspublic"

  - name: "config"
    displayName: "Trident configuration"
    type: string

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: maritimus-staging-eastus-cr-service-connection
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -eux

        if [ ${{ parameters.config }} != 'misc' ]; then
          echo "Skipping step. Configuration is '${{ parameters.config }}'."
          exit 0
        fi

        # Login to ACR
        az acr login -n ${{ parameters.registry }}

        repository_name=${{ parameters.imageName }}
        build_id="$(Build.BuildId)"

        cd $(Build.SourcesDirectory)/artifacts/test-image

        # Regardless of whether the test is on host or container, the file is called 'regular.cosi'
        if [[ ${{ parameters.versionNumber }} == 1 ]]; then
          filename="regular.cosi"
        else
          filename="regular_v${{ parameters.versionNumber }}.cosi"
        fi

        tag="v$build_id"
        echo "Pushing $filename with tag $tag to ${{ parameters.registry }}.azurecr.io"
        oras push ${{ parameters.registry }}.azurecr.io/$repository_name:$tag "$filename"

        sleep 5

        oras manifest fetch ${{ parameters.registry }}.azurecr.io/$repository_name:$tag

        az acr repository show --name ${{ parameters.registry }} --image ${repository_name}:${tag}

        # if oras manifest fetch ${{ parameters.registry }}.azurecr.io/$repository_name:$tag > /dev/null 2>&1; then
        #     echo "Tag $tag found in repository $repository_name"
        # else
        #     echo "Tag $tag NOT found in repository $repository_name"
        #     exit 1
        # fi
    displayName: "Az ACR login & Push to Registry"
    retryCountOnTaskFailure: 3
  # - bash: |
  #     set -eux

  #     if [ ${{ parameters.config }} != 'misc' ]; then
  #       echo "Skipping step. Configuration is '${{ parameters.config }}'."
  #       exit 0
  #     fi

  #     repository_name=${{ parameters.imageName }}
  #     build_id="$(Build.BuildId)"

  #     cd $(Build.SourcesDirectory)/artifacts/test-image

  #     # Regardless of whether the test is on host or container, the file is called 'regular.cosi'
  #     if [[ ${{ parameters.versionNumber }} == 1 ]]; then
  #       filename="regular.cosi"
  #     else
  #       filename="regular_v${{ parameters.versionNumber }}.cosi"
  #     fi

  #     tag="v$build_id"
  #     echo "Pushing $filename with tag $tag to ${{ parameters.registry }}.azurecr.io"
  #     oras push ${{ parameters.registry }}.azurecr.io/$repository_name:$tag "$filename"

  #     sleep 5

  #     if oras manifest fetch ${{ parameters.registry }}.azurecr.io/$repository_name:$tag > /dev/null 2>&1; then
  #         echo "Tag $tag found in repository $repository_name"
  #     else
  #         echo "Tag $tag NOT found in repository $repository_name"
  #         exit 1
  #     fi
  #   displayName: "Push ${{ parameters.imageName }} to registry"
  #   retryCountOnTaskFailure: 3
