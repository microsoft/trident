parameters:
- name: argusRepo
  type: string
  default: argus-toolkit

- name: tridentPipelineID
  type: string
  default: ''

- name: downloadBuildTypeTrident
  type: string
  default: current # set to 'specific' to download from tridentPipelineID

- name: tridentArtifact
  type: string
  default: 'drop_Trident_BuildTrident'

- name: tridentRepo
  type: string
  default: self

- name: testImagesRepo
  type: string
  default: 'test-images'

- name: runtimeImagePipelineID
  type: string
  default: ''

- name: downloadBuildTypeRuntimeOS
  type: string
  default: current # set to 'specific' to download from runtimeImagePipelineID

- name: tridentStage
  type: string
  default: Trident # name of the stage where trident is build

- name: provOSPipelineID
  type: string
  default: ''

- name: downloadBuildTypeProvOS
  type: string
  default: current # set to 'specific' to download from provOSPipelineID

- name: isogenPipelineID
  type: string
  default: ''

- name: downloadBuildTypeIsogen
  type: string
  default: current # set to 'specific' to download from isogenPipelineID

- name: installerISOPipelineID
  type: string
  default: ''

- name: downloadBuildTypeInstallerISO
  type: string
  default: current # set to 'specific' to download from installerISOPipelineID

- name: updateRuntimeOSTrident
  type: boolean
  default: false

- name: publishUniversalFeed
  type: boolean
  default: false

stages:
- template: trident-stage.yml
  parameters:
    tridentRepo: ${{ parameters.tridentRepo }}
    tridentArtifactSource: ${{ parameters.downloadBuildTypeTrident }}
    publishUniversalFeed: ${{ parameters.publishUniversalFeed }}

- template: prov-os.yml
  parameters:
    provOSArtifactSource: ${{ parameters.downloadBuildTypeProvOS }}
    tridentStage : ${{ parameters.tridentStage }}
    argusRepo: ${{ parameters.argusRepo }}
    downloadBuildType: ${{ parameters.downloadBuildTypeTrident }}
    tridentPipeline: ${{ parameters.tridentPipelineID }}
    artifactName: ${{ parameters.tridentArtifact }}

- template: trident-testimg.yml
  parameters:
    runtimeOSArtifactSource: ${{ parameters.downloadBuildTypeRuntimeOS }}
    testImagesRepo: ${{ parameters.testImagesRepo }}
    tridentStage : ${{ parameters.tridentStage }}
    downloadBuildType: ${{ parameters.downloadBuildTypeTrident }}
    tridentPipeline: ${{ parameters.tridentPipelineID }}
    artifactName: ${{ parameters.tridentArtifact }}

- template: building-tools.yml
  parameters:
    argusRepo: ${{ parameters.argusRepo }}
    isogenArtifactSource: ${{ parameters.downloadBuildTypeIsogen }}

- template: installer-iso.yml
  parameters:
    installerISOArtifactSource: ${{ parameters.downloadBuildTypeInstallerISO }}
    argusRepo: ${{ parameters.argusRepo }}
    downloadBuildTypeRuntimeOS: ${{ parameters.downloadBuildTypeRuntimeOS }}
    runtimeImagePipeline: ${{ parameters.runtimeImagePipelineID }}
    downloadBuildTypeProvOS: ${{ parameters.downloadBuildTypeProvOS }}
    provOSPipeline:  ${{ parameters.provOSPipelineID }}
    downloadBuildTypeIsogen: ${{ parameters.downloadBuildTypeIsogen }}
    isogenPipeline:  ${{ parameters.isogenPipelineID }}

- template: netlaunch-testing.yml
  parameters:
    argusRepo: ${{ parameters.argusRepo }}
    downloadBuildType: ${{ parameters.downloadBuildTypeInstallerISO }}
    installerISOPipeline: ${{ parameters.installerISOPipelineID }}
    updateRuntimeOSTrident: ${{ parameters.updateRuntimeOSTrident }}

- ${{ if eq(parameters.publishUniversalFeed, 'true') }}:
  - template: publish.yml
