{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HostConfiguration",
  "description": "HostConfiguration is the configuration for a host. Trident agent will use this to configure the host.",
  "type": "object",
  "properties": {
    "management": {
      "description": "The Management configuration controls the installation of the Trident agent onto the runtime OS.",
      "default": {
        "disable": false,
        "phonehome": null,
        "selfUpgrade": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/Management"
        }
      ]
    },
    "network": {
      "description": "Netplan network configuration for the runtime OS.\n\nSee [Netplan YAML Configuration](https://netplan.readthedocs.io/en/stable/netplan-yaml/) for more information.",
      "type": "object",
      "format": "Netplan YAML",
      "nullable": true
    },
    "networkProvision": {
      "description": "Netplan network configuration for the provisioning OS _ONLY_.\n\nSee [Netplan YAML Configuration](https://netplan.readthedocs.io/en/stable/netplan-yaml/) for more information.\n\nWhen provided, this configuration will be used to configure the network on the provisioning OS. When not provided, the network configuration from the runtime OS will be used instead.",
      "type": "object",
      "format": "Netplan YAML",
      "nullable": true
    },
    "osconfig": {
      "description": "OS Configuration for the runtime OS.",
      "allOf": [
        {
          "$ref": "#/definitions/OsConfig"
        }
      ]
    },
    "scripts": {
      "description": "Optional scripts to be run after different Trident stages have completed.",
      "allOf": [
        {
          "$ref": "#/definitions/Scripts"
        }
      ]
    },
    "storage": {
      "description": "Describes the storage configuration of the host.",
      "default": {},
      "allOf": [
        {
          "$ref": "#/definitions/Storage"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AbUpdate": {
      "description": "A/B update configuration. Carries information about the A/B update volume pairs that are used to perform A/B updates.",
      "type": "object",
      "required": [
        "volumePairs"
      ],
      "properties": {
        "volumePairs": {
          "description": "A list of volume pairs that will be used for A/B Update.\n\nYou can target the A/B Update volume pair from the `images` and `mount-points` and Trident will pick the right volume to use based on the A/B Update state of the host.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbVolumePair"
          }
        }
      },
      "additionalProperties": false
    },
    "AbVolumePair": {
      "description": "Per A/B update volume pair configuration. Points to the underlying block devices used for the A/B update.\n\n**Under development, initial logic for illustration purposes only.**",
      "type": "object",
      "required": [
        "id",
        "volumeAId",
        "volumeBId"
      ],
      "properties": {
        "id": {
          "description": "A unique identifier for the volume pair.\n\nThis is a user defined string that allows to link the volume pair to the results in the Host Status and to the mount points. The identifier needs to be unique across all types of devices, not just AB Volume Pairs.",
          "type": "string",
          "format": "Block Device ID"
        },
        "volumeAId": {
          "description": "The ID of the partition that will be used as the A volume.",
          "type": "string",
          "format": "Block Device ID"
        },
        "volumeBId": {
          "description": "The ID of the partition that will be used as the B volume.",
          "type": "string",
          "format": "Block Device ID"
        }
      },
      "additionalProperties": false
    },
    "AdoptedPartition": {
      "description": "Settings to adopt a pre-existing partition.",
      "type": "object",
      "required": [
        "id",
        "size"
      ],
      "properties": {
        "continue_if_no_match": {
          "description": "Set to true to continue if a match could not be made, otherwise produce an error and stop installation if no match was found.",
          "type": "boolean"
        },
        "id": {
          "description": "A unique identifier for the partition.\n\nThis is a user defined string that allows to link the partition to the mount points and also to results in the Host Status. The identifier needs to be unique across all types of devices, not just partitions.",
          "type": "string",
          "format": "Block Device ID"
        },
        "name": {
          "description": "Match a specific partition by its name.\n\nLook for a partition with the given name and adopt it.",
          "type": "string",
          "nullable": true
        },
        "next_of_type": {
          "description": "Match the first partition with the given type.\n\n**Use as a last resort.**",
          "allOf": [
            {
              "$ref": "#/definitions/PartitionType"
            }
          ],
          "nullable": true
        },
        "position": {
          "description": "Match a specific partition by its current position on the partition table.\n\nLook for a partition at the given position in the partition table and adopt it. The position is 0-based.",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "size": {
          "description": "Optionally resize the partition.\n\nNote: Only expanding is supported for adoption. Trying to shrink a partition will result in an error.\n\nFormat: String `<number>[<unit>]`\n\nAccepted values:\n\n- `grow`: Use all available space. It is recommended to ONLY use this for the last partition on the disk.\n\n- A number with optional unit suffixes: K, M, G, T (to the base of 1024), bytes by default when no unit is specified. For new partitions, it will attempt to create a partition of this size. If a partition is being adopted, size MUST NOT be less than the size of the partition being adopted. Only expanding is supported for adoption.\n\nExamples:\n\n- `1G`\n\n- `200M`\n\n- `grow`",
          "type": "string"
        },
        "uuid": {
          "description": "Match a specific partition by its UUID.\n\nLook for a partition with the given UUID and adopt it.\n\n**This is the best option, use whenever possible.**",
          "type": "string",
          "format": "uuid",
          "nullable": true
        }
      }
    },
    "Disk": {
      "description": "Per disk configuration.",
      "type": "object",
      "required": [
        "device",
        "id",
        "partitionTableType",
        "partitions"
      ],
      "properties": {
        "adoptedPartitions": {
          "description": "A list of pre-existing partitions that will be adopted from the disk.\n\nSeveral options are available to match a partition to adopt. If more than one option is specified, ALL the provided criteria will be used to match the partition.",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdoptedPartition"
          }
        },
        "device": {
          "description": "The device path of the disk. Points to the disk device in the host. It is recommended to use stable paths, such as the ones under `/dev/disk/by-path/` or [WWNs](https://en.wikipedia.org/wiki/World_Wide_Name).",
          "type": "string"
        },
        "id": {
          "description": "A unique identifier for the disk. This is a user defined string that allows to link the disk to what is consuming it and also to results in the Host Status. The identifier needs to be unique across all types of devices, not just disks.\n\nTBD: At the moment, the partition table is created from scratch. In the future, it will be possible to consume an existing partition table.",
          "type": "string",
          "format": "Block Device ID"
        },
        "partitionTableType": {
          "description": "The partition table type of the disk. Supported values are: `gpt`.",
          "allOf": [
            {
              "$ref": "#/definitions/PartitionTableType"
            }
          ]
        },
        "partitions": {
          "description": "A list of partitions that will be created on the disk.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Partition"
          }
        }
      },
      "additionalProperties": false
    },
    "EncryptedVolume": {
      "description": "A LUKS2-encrypted volume configuration.",
      "type": "object",
      "required": [
        "deviceName",
        "id",
        "targetId"
      ],
      "properties": {
        "deviceName": {
          "description": "The name of the device to create under `/dev/mapper` when opening the volume.\n\nThis parameter is required. It must be a valid file name and unique among the list of encrypted volumes.",
          "type": "string"
        },
        "id": {
          "description": "The id of the LUKS-encrypted volumes to create.\n\nThis parameter is required. It must be non-empty and unique among the ids of all block devices in the host configuration. This includes the ids of all disk partitions, encrypted volumes, software raid arrays, and a/b upgrade volume pairs.",
          "type": "string",
          "format": "Block Device ID"
        },
        "targetId": {
          "description": "The id of the disk partition or software raid array to encrypt.\n\nThis parameter is required. It must be unique among the list of encrypted volumes.\n\nIf it refers to a disk partition, it must be of a supported type. Supported types are all but `root` and `efi`.\n\nIf it refers to a software raid array, the first disk partition of the software raid array must be of a supported type.",
          "type": "string",
          "format": "Block Device ID"
        }
      },
      "additionalProperties": false
    },
    "Encryption": {
      "description": "Configure encrypted volumes of underlying disk partitions or software raid arrays.",
      "type": "object",
      "required": [
        "volumes"
      ],
      "properties": {
        "recoveryKeyUrl": {
          "description": "A URL to the file containing the recovery key to use for encryption.\n\nThis parameter is optional but highly encouraged. If not specified, only the TPM2 device will be enrolled.\n\n`file` is the only currently supported URL scheme. The contents of the key serve as the key. It must be in plain text and not encoded.",
          "type": "string",
          "format": "uri",
          "nullable": true
        },
        "volumes": {
          "description": "The list of LUKS2-encrypted volumes to create.\n\nThis parameter is required and must not be empty. Each item is an object that will contain the configuration for a given partition or RAID array.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncryptedVolume"
          }
        }
      },
      "additionalProperties": false
    },
    "Image": {
      "description": "Per image configuration.",
      "type": "object",
      "required": [
        "format",
        "sha256",
        "targetId",
        "url"
      ],
      "properties": {
        "format": {
          "description": "The format of the image.",
          "allOf": [
            {
              "$ref": "#/definitions/ImageFormat"
            }
          ]
        },
        "sha256": {
          "description": "The SHA256 checksum of the image.\n\nThis is used to verify the integrity of the image.\n\nAccepted values:\n\n- 64-character hexadecimal string (case insensitive)\n\n- `ignored` to skip the checksum verification",
          "type": "string"
        },
        "targetId": {
          "description": "The ID of the partition that will be used to store the image.",
          "type": "string",
          "format": "Block Device ID"
        },
        "url": {
          "description": "The URL of the image.\n\nSupported schemes are: `file`, `http`, `https`.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ImageFormat": {
      "description": "Image format.",
      "oneOf": [
        {
          "title": "Raw Zstd Compressed",
          "description": "Raw filesystem image with zstd compression.",
          "type": "string",
          "enum": [
            "raw-zstd"
          ]
        }
      ]
    },
    "Management": {
      "description": "The Management configuration controls the installation of the Trident agent onto the runtime OS.",
      "type": "object",
      "properties": {
        "datastorePath": {
          "description": "Describes where to place the datastore Trident will use to store its state. Defaults to `/var/lib/trident/datastore.sqlite`. Needs to end with `.sqlite`, cannot be an existing file and cannot reside on a read-only filesystem or A/B volume.",
          "type": "string",
          "nullable": true
        },
        "disable": {
          "description": "When set to `true`, prevents Trident from being enabled on the runtime OS. In that case, the remaining fields are ignored.",
          "default": false,
          "type": "boolean"
        },
        "enableGrpc": {
          "description": "Whether Trident should start a gRPC server to listen for commands when the runtime OS boots. Defaults to `false`.",
          "type": "boolean"
        },
        "phonehome": {
          "description": "URL to reach out to when runtime OS networking is up, so Trident can report its status. If not specified, the value from the Trident configuration will be used. This is useful for debugging and monitoring purposes, say by an orchestrator.",
          "type": "string",
          "nullable": true
        },
        "selfUpgrade": {
          "description": "(FOR DEBUGGING ONLY) a boolean flag that indicates whether Trident should upgrade itself. If set to `true`, Trident will replicate itself into the runtime OS prior to transitioning. This is useful during development to ensure the matching version of Trident is used. Defaults to `false`.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "MountPoint": {
      "description": "Mount point configuration.\n\nThese are used by Trident to update the `/etc/fstab` in the runtime OS to correctly mount the volumes.",
      "type": "object",
      "required": [
        "filesystem",
        "options",
        "path",
        "targetId"
      ],
      "properties": {
        "filesystem": {
          "description": "The filesystem to be used for this mount point.\n\nThis value will be used to format the partition.",
          "type": "string"
        },
        "options": {
          "description": "A list of options to be used for this mount point.\n\nThese will be passed as is to the `/etc/fstab` file.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "description": "The path of the mount point.\n\nThis is the path where the volume will be mounted in the runtime OS. For `swap` partitions, the path should be `none`.",
          "type": "string"
        },
        "targetId": {
          "description": "The id of the block device that will be mounted at this mount point.\n\nThis parameter is required. It must be the ID of a disk partition, encrypted volume, software raid array, or a/b update volume pair.",
          "type": "string",
          "format": "Block Device ID"
        }
      },
      "additionalProperties": false
    },
    "OsConfig": {
      "description": "Configuration for the host OS.",
      "type": "object",
      "properties": {
        "users": {
          "title": "Users",
          "description": "Map of users to configure on the host. The key is the username.",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "additionalProperties": false
    },
    "Partition": {
      "description": "Per partition configuration.",
      "type": "object",
      "required": [
        "id",
        "size",
        "type"
      ],
      "properties": {
        "id": {
          "description": "A unique identifier for the partition.\n\nThis is a user defined string that allows to link the partition to the mount points and also to results in the Host Status. The identifier needs to be unique across all types of devices, not just partitions.",
          "type": "string",
          "format": "Block Device ID"
        },
        "size": {
          "description": "Size of the partition.\n\nFormat: String `<number>[<unit>]`\n\nAccepted values:\n\n- `grow`: Use all available space.\n\n- A number with optional unit suffixes: K, M, G, T (to the base of 1024), bytes by default when no unit is specified.\n\nExamples:\n\n- `1G`\n\n- `200M`\n\n- `grow`",
          "type": "string"
        },
        "type": {
          "description": "The type of the partition.\n\nAs defined by the [Discoverable Partitions Specification](https://uapi-group.org/specifications/specs/discoverable_partitions_specification/).",
          "allOf": [
            {
              "$ref": "#/definitions/PartitionType"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PartitionTableType": {
      "description": "Partition table type. Currently only GPT is supported.",
      "oneOf": [
        {
          "title": "GPT",
          "description": "Disk should be formatted with a GUID Partition Table (GPT).",
          "type": "string",
          "enum": [
            "gpt"
          ]
        }
      ]
    },
    "PartitionType": {
      "description": "Partition types as defined by The Discoverable Partitions Specification (https://uapi-group.org/specifications/specs/discoverable_partitions_specification/).",
      "oneOf": [
        {
          "title": "EFI System Partition",
          "description": "`C12A7328-F81F-11D2-BA4B-00A0C93EC93B`",
          "type": "string",
          "enum": [
            "esp"
          ]
        },
        {
          "title": "Root partition",
          "description": "x64: `4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709`",
          "type": "string",
          "enum": [
            "root"
          ]
        },
        {
          "title": "Swap partition",
          "description": "`0657fd6d-a4ab-43c4-84e5-0933c84b4f4f`",
          "type": "string",
          "enum": [
            "swap"
          ]
        },
        {
          "title": "Root partition with dm-verity enabled",
          "description": "x64: `2c7357ed-ebd2-46d9-aec1-23d437ec2bf5`",
          "type": "string",
          "enum": [
            "root-verity"
          ]
        },
        {
          "title": "Home partition",
          "description": "`933ac7e1-2eb4-4f13-b844-0e14e2aef915`",
          "type": "string",
          "enum": [
            "home"
          ]
        },
        {
          "title": "Var partition",
          "description": "`4d21b016-b534-45c2-a9fb-5c16e091fd2d`",
          "type": "string",
          "enum": [
            "var"
          ]
        },
        {
          "title": "Usr partition",
          "description": "x64: `8484680c-9521-48c6-9c11-b0720656f69e`",
          "type": "string",
          "enum": [
            "usr"
          ]
        },
        {
          "title": "Tmp partition",
          "description": "`7ec6f557-3bc5-4aca-b293-16ef5df639d1`",
          "type": "string",
          "enum": [
            "tmp"
          ]
        },
        {
          "title": "Generic Linux partition",
          "description": "`0fc63daf-8483-4772-8e79-3d69d8477de4`",
          "type": "string",
          "enum": [
            "linux-generic"
          ]
        },
        {
          "title": "Server Data partition",
          "description": "`3b8f8425-20e0-4f3b-907f-1a25a76f98e8`\n\nTo use this partition type on the disk with the root volume, make sure to not have `/srv` symlink present in your root volume filesystem. If you do, remove it before running Trident (e.g. by using MIC).",
          "type": "string",
          "enum": [
            "srv"
          ]
        }
      ]
    },
    "Password": {
      "description": "Password configuration for a user.",
      "oneOf": [
        {
          "title": "[DEFAULT] Locked Password",
          "description": "Lock the user's password. (equivalent to `passwd -l`)",
          "type": "object",
          "required": [
            "mode"
          ],
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "locked"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "RaidConfig": {
      "description": "RAID configuration for a host.",
      "type": "object",
      "properties": {
        "software": {
          "description": "Individual software raid configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SoftwareRaidArray"
          }
        }
      },
      "additionalProperties": false
    },
    "RaidLevel": {
      "oneOf": [
        {
          "title": "Striping",
          "type": "string",
          "enum": [
            "raid0"
          ]
        },
        {
          "title": "Mirroring",
          "type": "string",
          "enum": [
            "raid1"
          ]
        },
        {
          "title": "Striping with parity",
          "type": "string",
          "enum": [
            "raid5"
          ]
        },
        {
          "title": "Striping with double parity",
          "type": "string",
          "enum": [
            "raid6"
          ]
        },
        {
          "title": "Stripe of mirrors",
          "type": "string",
          "enum": [
            "raid10"
          ]
        }
      ]
    },
    "Script": {
      "description": "A script that can be run on the host during Trident stages.",
      "type": "object",
      "required": [
        "name",
        "servicingType"
      ],
      "properties": {
        "content": {
          "description": "The contents of the script. Conflicts with path.",
          "type": "string",
          "nullable": true
        },
        "environmentVariables": {
          "description": "Environment variables that are needed by the script. These will be set before running the script. UPDATE_KIND and TARGET_ROOT values are set by default to use.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "interpreter": {
          "description": "Binary to run the script with. The default is `/bin/sh`.",
          "type": "string",
          "nullable": true
        },
        "logFilePath": {
          "description": "Path of a file to write the script's output to.\n\nThis includes both stdout and stderr. The path and file will be created if they don't exist. If the file already exists, it will be truncated.",
          "type": "string",
          "nullable": true
        },
        "name": {
          "description": "Name of the script.",
          "type": "string"
        },
        "path": {
          "description": "Path to the script file. Conflicts with content.\n\nThe file must be located in the host's filesystem.",
          "type": "string",
          "nullable": true
        },
        "servicingType": {
          "description": "List of servicing_type to run the script with.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicingType"
          }
        }
      },
      "additionalProperties": false
    },
    "Scripts": {
      "description": "Scripts that can be run on the host during Trident stages. These scripts are run in the order they are defined. Ensure that the scripts are idempotent as they may be run multiple times.",
      "type": "object",
      "properties": {
        "postConfigure": {
          "description": "Scripts to be run after Trident configuration stage is complete.\n\nThese scripts are run from within a chroot of the target OS.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Script"
          }
        },
        "postProvision": {
          "description": "Scripts to be run after Trident provision stage is complete.\n\nThese scripts are run with the root filesystem of the target OS mounted at */mnt/newroot* and other partitions specified for the target OS mounted relative to that.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Script"
          }
        }
      },
      "additionalProperties": false
    },
    "ServicingType": {
      "description": "The type of servicing performed by Trident that a script should be run for.",
      "oneOf": [
        {
          "title": "Clean Install",
          "description": "This is the first time Trident is installed on the host.",
          "type": "string",
          "enum": [
            "clean-install"
          ]
        },
        {
          "title": "Normal Update",
          "description": "This is a normal update that is not an AB update.",
          "type": "string",
          "enum": [
            "normal-update"
          ]
        },
        {
          "title": "AB Update",
          "description": "This is an AB update.",
          "type": "string",
          "enum": [
            "ab-update"
          ]
        },
        {
          "title": "Update and Reboot",
          "description": "This is an update that requires a reboot.",
          "type": "string",
          "enum": [
            "update-and-reboot"
          ]
        },
        {
          "title": "All",
          "description": "This includes all servicing types.",
          "type": "string",
          "enum": [
            "all"
          ]
        }
      ]
    },
    "SoftwareRaidArray": {
      "description": "Software RAID configuration.\n\nThe RAID array will be created using the `mdadm` package. During a clean install, all the existing RAID arrays that are on disks defined in the host configuration will be unmounted, and stopped.\n\nThe RAID arrays that are defined in the host configuration will be created, and mounted if specified in `mount-points`.\n\nTo learn more about RAID, please refer to the [RAID wiki](https://wiki.archlinux.org/title/RAID)\n\nTo learn more about `mdadm`, please refer to the [mdadm guide](https://raid.wiki.kernel.org/index.php/A_guide_to_mdadm)",
      "type": "object",
      "required": [
        "devices",
        "id",
        "level",
        "metadataVersion",
        "name"
      ],
      "properties": {
        "devices": {
          "description": "Devices that will be used for the RAID array.\n\nSee the reference links for picking the right number of devices. Devices are partition ids from the `disks` section.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "Block Device ID"
          }
        },
        "id": {
          "description": "A unique identifier for the RAID array.\n\nThis is a user defined string that allows to link the RAID array to the mount points and also to results in the Host Status. The identifier needs to be unique across all types of devices, not just RAID arrays.",
          "type": "string",
          "format": "Block Device ID"
        },
        "level": {
          "description": "RAID level.\n\nSupported and tested values are `raid0`, `raid1`. Other possible values yet to be tested are: `raid5`, `raid6`, `raid10`.",
          "allOf": [
            {
              "$ref": "#/definitions/RaidLevel"
            }
          ]
        },
        "metadataVersion": {
          "description": "Metadata of the RAID array.\n\nSupported and tested values are `1.0`. Note that this is a string attribute.",
          "type": "string"
        },
        "name": {
          "description": "Name of the RAID array.\n\nThis is used to reference the RAID array on the system. For example, `some-raid` will result in `/dev/md/some-raid` on the system.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SshMode": {
      "oneOf": [
        {
          "title": "[DEFAULT] Blocked",
          "description": "Disable SSH for this entity.",
          "type": "string",
          "enum": [
            "block"
          ]
        },
        {
          "title": "Key Only",
          "description": "Enable SSH for this entity with KEY only.",
          "type": "string",
          "enum": [
            "key-only"
          ]
        }
      ]
    },
    "Storage": {
      "description": "Storage configuration describes the disks of the host that will be used to store the OS and data. Not all disks of the host need to be captured inside the Host Configuration, only those that Trident should operate on.",
      "type": "object",
      "properties": {
        "abUpdate": {
          "description": "A/B update configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/AbUpdate"
            }
          ],
          "nullable": true
        },
        "disks": {
          "description": "A list of disks that will be used for the host.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        },
        "encryption": {
          "description": "Encryption configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/Encryption"
            }
          ],
          "nullable": true
        },
        "images": {
          "description": "A list of images to be written to the host.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "mountPoints": {
          "description": "Mount point configuration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPoint"
          }
        },
        "raid": {
          "description": "RAID configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/RaidConfig"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "User": {
      "description": "Configuration for a specific user.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "groups": {
          "description": "List of groups to add the user to. **(IN DEVELOPMENT)**",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Username",
          "type": "string"
        },
        "password": {
          "description": "Password configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/Password"
            }
          ]
        },
        "sshKeys": {
          "description": "List of SSH keys to add to the user's authorized keys. **(IN DEVELOPMENT)**",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sshMode": {
          "description": "SSH configuration for the user. **(IN DEVELOPMENT)**",
          "allOf": [
            {
              "$ref": "#/definitions/SshMode"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}